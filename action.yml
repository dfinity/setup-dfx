name: 'Install dfx'
description: 'Install the dfx utility at a particular version'
inputs:
  dfx-version:
    description: >
      The dfx version to install. This value will be used to populate
      the DFX_VERSION variable that will be handled by the installation
      script "install.sh".
    default: 'latest'

runs:
  using: composite
  steps:
    - name: Install dfx
      shell: sh
      env:
        DFXVM_INIT_YES: 'true'
      run: |
        echo "Version ${{ inputs.dfx-version }} will be installed"
        if [ "${{ inputs.dfx-version }}" = "latest" ]; then
          sh -ci "$(curl -fsSL https://raw.githubusercontent.com/dfinity/sdk/ens/update-setup-dfx-action/public/install-dfxvm.sh)"
        else
          DFX_VERSION="${{ inputs.dfx-version }}" sh -ci "$(curl -fsSL https://raw.githubusercontent.com/dfinity/sdk/ens/update-setup-dfx-action/public/install-dfxvm.sh)"
        fi
    - name: Set up path (linux)
      shell: sh
      if: runner.os == 'Linux'
      run: |
        echo "$HOME/.local/share/dfx/bin" >> $GITHUB_PATH
        ls -l $HOME/.local/share/dfx/bin
    - name: Set up path (macos)
      shell: sh
      if: runner.os == 'macOS'
      run: |
        echo "$HOME/Library/Application Support/org.dfinity.dfx/bin" >> $GITHUB_PATH
